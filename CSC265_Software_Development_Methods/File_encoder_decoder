#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

int encode(char* str) { 

	int x;  
	int y = strlen(str); 
	int i;
	int j = 0;
	int k; 
	int temp = 0;
	int count[y];
	char z[y];

	for (i = 0; i < y; i++) { //go through each element of string 
		z[j++] = str[i]; //copy into z
		x = 1; 
		while (i + 1 < y && str[i] == str[i + 1]) { //compare the element with the next element 
			x++; 
			i++;
		}
		count[temp] = x;
		temp++;	        
	} 
	count[temp] = -1;
	count[y+1] = '\0';
	
	for(i = 0; i < temp; i++){	//print the encoded output to console
		printf("%c",z[i]);
		printf("%d",count[i]);
	}
	return 0; 
} 

int decode(char* str) { 

	char cha;
	char ch;
	int intege;
	int integer;
	int count = 1;
	char* result;
	int valid;
	int i;
	int k;
	 
	for(i = 0; i < strlen(str); i++){ //go through each element in string 
		int check = (int)(str[i]); //get the acsii number of element of string
		if(check > 57){ //if the string contains digits
			if(check != 65 && check != 67 && check != 71 && check != 84){ //check if contains 'A''C''T''G'
				fprintf(stderr,"Error: String could not be decoded"); //if contains ACTG print error
				exit(5);
				}
		}
	}
	
	int j;
	
	for(j = 0; j < strlen(str); j++){ 
		if((int)(str[j]) >= 65 && (int)(str[j]) <= 90){ //if meets a digit
			ch = str[j+1];
			intege = str[j+1] - '0';//set the last one to be NULL
			count = intege;
			for(k = 0; k < count; k++){ //print the decoded output one by one count times
				putchar(str[j]);
			}
		}
	}
	return 0;
}

int main(int argc, char *argv[]){
	
	int a;
	
	FILE *fptr = fopen(argv[1],"r"); //open the file

	char str[41];

	if(argv[1]==NULL){ 
		fprintf(stderr,"Error: No input file specified!");
		exit(1);
	}

	if(fptr == NULL){
		fprintf(stderr,"Read error:file not found or cannot be read");
		exit(2);
	}
 
	fgets(str,41,fptr);

	int envalid =-1;
	
	for( a = 0; a < str[a] != '\0'; a++){ //if there is lower case in the input string
		if((int)(str[a]) >=97 && (int)(str[a]) <= 122) {
			envalid = 0;
		}
	}   

	if(argv[2] != NULL){
		if((strcmp(argv[2],"e")) == 0){
			if(envalid == 0){
				fprintf(stderr,"Error: String could not be encoded");
				exit(5);
			}else{
				encode(str);
				exit(0);
			}
		}else if((strcmp(argv[2],"d")) == 0){
			if(envalid == 0){
				fprintf(stderr,"Error: String could no be decoded");
				exit(5);
			}else{
				decode(str);
				exit(0);
				}
		}
    }else{
        fprintf(stderr,"Invalid Usage,expected: RLE{filename}[e|d]");
        exit(4); 
    }
		
    fclose(fptr);
    
}

